server:
  port: 8083

# Resilience4j 서킷 브레이커 설정
resilience4j.circuitbreaker:
  configs:
    # 'default' 설정: 모든 서킷 브레이커 인스턴스의 기본값
    default:
      failure-rate-threshold: 50 # (1) 실패율 임계값: 50%
      minimum-number-of-calls: 5 # (2) 최소 호출 수: 5번
      wait-duration-in-open-state: 10s # (3) OPEN 상태 유지 시간: 10초
      permitted-number-of-calls-in-half-open-state: 3 # (4) HALF_OPEN 상태 시도 횟수: 3번
      sliding-window-type: COUNT_BASED # (5) 슬라이딩 윈도우 타입: 횟수 기반
      sliding-window-size: 10 # (6) 슬라이딩 윈도우 크기: 최근 10회 호출

      # (참고) slow-call 관련 설정도 있지만, 우선 '실패(Exception)' 기반으로만 설정
      # slow-call-rate-threshold: 60
      # slow-call-duration-threshold: 2s

      # Resilience4j가 어떤 예외를 '실패'로 간주할지 명시적으로 등록합니다.
      # 기본값인 IOException, TimeoutException에 WebClientResponseException '추가'합니다.
      record-exceptions:
        - java.io.IOException                # (기본값) 서버 다운 (ConnectException)
        - java.util.concurrent.TimeoutException  # (기본값) 타임아웃
        # 5xx 및 4xx 에러를 모두 포함하는 상위 예외 (WebClient가 던짐)
        - org.springframework.web.reactive.function.client.WebClientResponseException

      # '실패'로 간주하지 "않을" 예외 목록 (위 목록보다 우선순위가 높음)
      # 4xx 계열은 서버 장애가 아니므로 무시합니다.
      ignore-exceptions:
        # 404 Not Found
        - org.springframework.web.reactive.function.client.WebClientResponseException$NotFound
        # 400 Bad Request
        - org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest
        # 401 Unauthorized
        - org.springframework.web.reactive.function.client.WebClientResponseException$Unauthorized
        # 403 Forbidden
        - org.springframework.web.reactive.function.client.WebClientResponseException$Forbidden
        # (WebClientRequestException도 서버 장애가 아니므로 무시합니다)
        - org.springframework.web.reactive.function.client.WebClientRequestException
  instances:
    # (★중요★) 우리가 사용할 서킷 브레이커의 고유 이름
    user-service-breaker:
      # 위에서 정의한 'default' 설정을 상속받아 사용
      base-config: default